apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "maven-publish"

group = 'com.github.doordeck'

android {
    // Fallback values for NFC tiles
    def fallbackNfcUriHost = "doordeck.link"
    def fallbackNfcUriScheme = "https"

    defaultConfig {
        minSdkVersion 26
        compileSdk 36
        buildToolsVersion = '35.0.0'
        multiDexEnabled = true
        versionName "1.2"
        vectorDrawables.useSupportLibrary = true

        resValue "string", "nfc_uri_host", project.properties.get("nfcUri").getOrDefault("host", fallbackNfcUriHost)
        resValue "string", "nfc_uri_scheme", project.properties.get("nfcUri").getOrDefault("scheme", fallbackNfcUriScheme)
    }

    namespace "com.github.doordeck.ui"

    buildFeatures {
        viewBinding true
        buildConfig true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/atomicfu.kotlin_module']
        }
    }


    buildTypes.each { type ->
        type.manifestPlaceholders["nfc_uri_host"] = project.properties.get("nfcUri").getOrDefault("host", fallbackNfcUriHost)
        type.manifestPlaceholders["nfc_uri_scheme"] = project.properties.get("nfcUri").getOrDefault("scheme", fallbackNfcUriScheme)
    }

    buildTypes {
        debug {
            buildConfigField "String", "VERSION_NAME", '"1.2"'
            buildConfigField "String", "BASE_URL_API", '"https://api.dev.doordeck.com"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "VERSION_NAME", '"1.2"'
            buildConfigField "String", "BASE_URL_API", '"https://api.doordeck.com"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlin {
        jvmToolchain(17)
    }

    testOptions {
        unitTests {
            // Note: without this, all Robolectric tests using BuildConfig will fail.
            includeAndroidResources = true
        }
    }
}

buildscript {

    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }

    dependencies {
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

dependencies {
    api(project(":api"))

    implementation 'com.github.adorsys:secure-storage-android:0.0.2'
    implementation "org.immutables:value-annotations:2.11.1" // or implementation, or compileOnly
    annotationProcessor "org.immutables:value:2.11.1"
    testAnnotationProcessor "org.immutables:value:2.11.1"

    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation "androidx.constraintlayout:constraintlayout:2.2.1"
    implementation "androidx.recyclerview:recyclerview:1.4.0"
    implementation "androidx.cardview:cardview:1.0.0"

    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // scan
    implementation('com.journeyapps:zxing-android-embedded:4.3.0') { transitive = false }

    implementation 'com.google.zxing:core:3.5.3'

    // location
    implementation 'com.google.android.gms:play-services-auth:21.4.0'
    implementation 'com.google.android.gms:play-services-location:21.3.0'

    // kotlin
    implementation 'ru.gildor.coroutines:kotlin-coroutines-retrofit:1.1.0'

}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
        repositories {
            mavenLocal()
        }
    }
}
