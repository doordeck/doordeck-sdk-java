apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "maven-publish"

group = 'com.github.doordeck'

android {

    defaultConfig {
        minSdkVersion 21
        compileSdk 33
        buildToolsVersion = '33.0.1'
        multiDexEnabled = true
        versionName "1.2"
        vectorDrawables.useSupportLibrary = true
    }

    namespace "com.github.doordeck.ui"

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    buildTypes.each { type ->
        // Fallback values for tiles
        def fallbackNfcUriHost = "doordeck.link"
        def fallbackNfcUriScheme = "https"

        type.manifestPlaceholders['nfc_uri_host'] = project.properties.get("nfcUri").getOrDefault("host", fallbackNfcUriHost)
        type.manifestPlaceholders['nfc_uri_scheme'] = project.properties.get("nfcUri").getOrDefault("scheme", fallbackNfcUriScheme)

    }

    buildTypes {
        debug {
            buildConfigField "String", "VERSION_NAME", '"1.2"'
            buildConfigField "String", "BASE_URL_API", '"https://api.dev.doordeck.com"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "VERSION_NAME", '"1.2"'
            buildConfigField "String", "BASE_URL_API", '"https://api.doordeck.com"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    testOptions {
        unitTests {
            // Note: without this, all Robolectric tests using BuildConfig will fail.
            includeAndroidResources = true
        }
    }
}

buildscript {

    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }

    dependencies {
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

dependencies {
    api(project(":api"))
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.0.4")

    implementation 'com.github.adorsys:secure-storage-android:0.0.2'
    implementation "org.immutables:value-annotations:2.7.5" // or implementation, or compileOnly
    annotationProcessor "org.immutables:value:2.7.5"
    testAnnotationProcessor "org.immutables:value:2.7.5"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.recyclerview:recyclerview:1.3.1"
    implementation "androidx.cardview:cardview:1.0.0"

    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // scan
    implementation('com.journeyapps:zxing-android-embedded:4.1.0') { transitive = false }

    implementation 'com.google.zxing:core:3.4.0'

    // location
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // kotlin
    implementation 'ru.gildor.coroutines:kotlin-coroutines-retrofit:1.1.0'

}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
        repositories {
            mavenLocal()
        }
    }
}
